"""
Prometheus 監控指標模組
集中管理所有應用程式效能指標
"""

from prometheus_client import (
    Counter, Histogram, Gauge, CollectorRegistry
)

# === Prometheus 監控指標初始化 ===
# 創建 Prometheus 指標收集器，用於監控 AI Agent 效能
REGISTRY = CollectorRegistry()

# 延遲指標 (Latency)
alert_processing_duration = Histogram(
    'alert_processing_duration_seconds',
    'Time spent processing a single alert',
    registry=REGISTRY
)

api_call_duration = Histogram(
    'api_call_duration_seconds',
    'Time spent on API calls by stage',
    ['stage'],
    registry=REGISTRY
)

retrieval_duration = Histogram(
    'retrieval_duration_seconds',
    'Time spent on data retrieval',
    registry=REGISTRY
)

# Token 指標 (Token Usage)
llm_input_tokens_total = Counter(
    'llm_input_tokens_total',
    'Total input tokens used by LLM analysis',
    registry=REGISTRY
)

llm_output_tokens_total = Counter(
    'llm_output_tokens_total',
    'Total output tokens generated by LLM analysis',
    registry=REGISTRY
)

embedding_input_tokens_total = Counter(
    'embedding_input_tokens_total',
    'Total input tokens used by embedding service',
    registry=REGISTRY
)

# 吞吐量與隊列 (Throughput & Queue)
alerts_processed_total = Counter(
    'alerts_processed_total',
    'Total number of alerts successfully processed',
    registry=REGISTRY
)

new_alerts_found_total = Counter(
    'new_alerts_found_total',
    'Total number of new alerts found during polling',
    registry=REGISTRY
)

pending_alerts_gauge = Gauge(
    'pending_alerts_gauge',
    'Current number of pending alerts',
    registry=REGISTRY
)

# 錯誤率 (Error Rate)
alert_processing_errors_total = Counter(
    'alert_processing_errors_total',
    'Total number of alert processing failures',
    registry=REGISTRY
)

api_errors_total = Counter(
    'api_errors_total',
    'Total number of API call failures by stage',
    ['stage'],
    registry=REGISTRY
)

graph_retrieval_fallback_total = Counter(
    'graph_retrieval_fallback_total',
    'Total number of fallbacks from graph to traditional retrieval',
    registry=REGISTRY
)

# Graph 相關指標
graph_entities_created_total = Counter(
    'graph_entities_created_total',
    'Total number of graph entities created',
    ['entity_type'],
    registry=REGISTRY
)

graph_relationships_created_total = Counter(
    'graph_relationships_created_total',
    'Total number of graph relationships created',
    ['relationship_type'],
    registry=REGISTRY
)

graph_queries_executed_total = Counter(
    'graph_queries_executed_total',
    'Total number of graph queries executed',
    registry=REGISTRY
)

# 工具函數
def record_processing_time(duration: float):
    """記錄警報處理時間"""
    alert_processing_duration.observe(duration)

def record_api_call_time(stage: str, duration: float):
    """記錄 API 調用時間"""
    api_call_duration.labels(stage=stage).observe(duration)

def increment_alerts_processed():
    """增加已處理警報計數"""
    alerts_processed_total.inc()

def increment_processing_errors():
    """增加處理錯誤計數"""
    alert_processing_errors_total.inc()

def update_pending_alerts(count: int):
    """更新待處理警報數量"""
    pending_alerts_gauge.set(count)